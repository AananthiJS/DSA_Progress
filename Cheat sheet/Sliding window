| Type           | Window Behavior                          | Two Pointers? | Example Use Case                              |
|---------------|----------------------------------------|--------------|------------------------------------------------|
| Fixed-Size    | Moves at a constant size               | âœ… Yes, both move together | Max sum of subarray of size K               |
| Variable-Size | Expands and shrinks based on conditions | âœ… Yes, but they move independently | Find smallest subarray with sum â‰¥ target |


When to Use Sliding Window ðŸš€
Use Sliding Window when the problem involves contiguous subarrays or substrings and requires efficient traversal instead of brute force.

ðŸ“Œ Recognizing Sliding Window Problems
âœ… 1. Fixed Window Size â†’ When you're given a fixed k length and need to compute something over a continuous subarray.
âœ” Example: Find the maximum sum of any subarray of size k.

âœ… 2. Variable Window Size â†’ When the problem requires finding the smallest/largest subarray that meets a condition (e.g., sum, frequency, uniqueness).
âœ” Example: Find the smallest subarray with a sum â‰¥ target.

âœ… 3. Substring & Pattern Matching â†’ When you need to analyze characters within a substring efficiently.
âœ” Example: Find the longest substring with at most k distinct characters.

âœ… 4. Frequency Counting in a Range â†’ When you're checking the frequency of elements in a sliding range.
âœ” Example: Find all anagrams of a pattern in a string.